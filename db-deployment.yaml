# Configure 'Deployment' of mysql server
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: mysql
    tier: database
spec:
  selector: # mysql Pod Should contain same labels
    matchLabels:
      app: mysql
      tier: database
  strategy:
    type: Recreate
  template:
    metadata:
      labels: # Must match 'Service' and 'Deployment' selectors
        app: mysql
        tier: database
    spec:
      containers:
        - image: mysql:latest # image from docker-hub
          imagePullPolicy: IfNotPresent
          #args:
            #- "--ignore-db-dir=lost+found" # Workaround for https://github.com/docker-library/mysql/issues/186
          name: mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets	# Check in mysql-secrets.yaml
                  key: password
            - name: MYSQL_DATABASE # Setting Database Name from a 'ConfigMap'
              #value: javatechie
              valueFrom :
                configMapKeyRef :
                  name : mysqldb-config	# Check in mysql-configMap.yaml
                  key :  dbName
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets	# Check in mysql-secrets.yaml
                  key: username
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets	# Check in mysql-secrets.yaml
                  key: password
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:        # Mounting voulume obtained from Persistent Volume Claim
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql #This is the path in the container on which the mounting will take place.
      volumes:
        - name: mysql-persistent-storage # Obtaining 'vloume' from PVC
          persistentVolumeClaim:
            claimName: mysql-pv-claim

---
# Define a 'Service' To Expose mysql to Other Services
apiVersion: v1
kind: Service
metadata:
  name: mysql  # DNS name
  labels:
    app: mysql
    tier: database
spec:
  type: NodePort
  ports:
    - port: 3306
      targetPort: 3306
      nodePort: 30006
  selector:       # mysql Pod Should contain same labels
    app: mysql
    tier: database
  #clusterIP: None  # We Use DNS, Thus ClusterIP is not relevant